<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Krzysiek's tech corner</title><link>https://krzysi3k.github.io/post/</link><description>Recent content in Posts on Krzysiek's tech corner</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 17 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://krzysi3k.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Building microservice in Python</title><link>https://krzysi3k.github.io/post/2021/06/fastapi/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://krzysi3k.github.io/post/2021/06/fastapi/</guid><description>Automate your workflow with simple microservice built in Python having an own custom microservice that exposes one or multiple HTTP endpoints is very useful when taking some actions (executing tasks) or serving data from database. As a DevOps engineers we are always trying to automate repeatable tasks in order to achieve the end result, improve productivity and remove human errors to the absolute minimum. Such services are quite popular in an event driven architectures when you want to run specific workload based on an event (HTTP call, new Pull request, logon failure, etc.</description></item><item><title>How I built my Blog with CI/CD Pipelines</title><link>https://krzysi3k.github.io/post/2021/06/gh-actions/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><guid>https://krzysi3k.github.io/post/2021/06/gh-actions/</guid><description>Build your web application and publish new content automatically In this post I will describe how I publish new content for my blog and how it&amp;rsquo;s deployed to Github pages where it is actually hosted.
Static Site Generators This blog is powered by static site generator called Hugo which is quite popular and definitely one of the fastest among other generators. While at the first glance static site might look exactly the same as the traditional website like Wordpress for instance - There are huge differences between them from the backend perspective.</description></item><item><title>Instant push notifications with Slack Bot API</title><link>https://krzysi3k.github.io/post/2021/05/slack-api/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://krzysi3k.github.io/post/2021/05/slack-api/</guid><description>Slack Bot API - push notifications for PC/smartphone Hello,
this is going to be a follow-up post to the MQTT broker post where I described quite extensively how to handle MQTT messages, but I haven&amp;rsquo;t described how to receive messages on smartphone or PC. Slack is quite popular collaboration tool, it is the main competitor to Microsoft Teams. Besides standard features like calling/messaging/file sharing It also has very rich API for developers and third party applications.</description></item><item><title>MQTT broker - central point for your home automation</title><link>https://krzysi3k.github.io/post/2021/05/mqtt-broker/</link><pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate><guid>https://krzysi3k.github.io/post/2021/05/mqtt-broker/</guid><description>MQTT - Lightweight pub/sub message broker MQTT is a standard messaging protocol for IoT devices - it implements publish/subscribe model, which in short is asynchronous communication system that allow to receive any published messages for all devices that are subscribed to the topic. It has vast usage in communication of IoT devices, due to high performance and low bandwidth usage. Most devices sold by different manufactures can be configured to communicate via MQTT or HTTP REST service and at the same time they are hooked to 3rd party IoT platforms like TUYA for instance (in order to access the device from the Internet).</description></item><item><title>My favorite metrics monitoring stack</title><link>https://krzysi3k.github.io/post/2021/05/metrics/</link><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate><guid>https://krzysi3k.github.io/post/2021/05/metrics/</guid><description>If you want to build monitoring for your infrastructure/applications + you want to have proper visualization then you have multiple options. I can see that there is more and more comprehensive tools on the market that allows you to implement end-to-end monitoring for your infra and applications.
Monolith vs Microservices Now I need to mention that I have been working with different tools including very big monolith software like SCOM (System Center Operations Manager) It is quite powerful solution from Microsoft that is mostly used in On-Prem environments, it is capable to monitor different OS types (Linux/Windows/AIX) and can run custom workloads and scripts written in various languages - powershell, bash, perl etc, additionally there are ready to use Management Packs for some specific solutions like SharePoint for instance.</description></item><item><title>Lift off! We have a lift off</title><link>https://krzysi3k.github.io/post/2021/05/first-post/</link><pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate><guid>https://krzysi3k.github.io/post/2021/05/first-post/</guid><description>print(&amp;lsquo;Hello World&amp;rsquo;) I launched blog and this is my first post. Hopefully I will be posting here on regular basis. I will try to focus on different technical areas like DevOps, Back-end engineering, Cloud computing, IoT and SpaceX / NASA exploration. Stay tuned!</description></item></channel></rss>